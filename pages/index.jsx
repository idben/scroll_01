import Head from "next/head";
import styles from "@/styles/Home.module.sass";
import { useEffect, useRef, useState } from "react";

const areas = [
  { className: 'area1', image: 'https://picsum.photos/1200/1200/?1', title: '頁面1', blockText: '1' },
  { className: 'area2', image: 'https://picsum.photos/1200/1200/?2', title: '頁面2', blockText: '2' },
  { className: 'area3', image: 'https://picsum.photos/1200/1200/?3', title: '頁面3', blockText: '3' },
  { className: 'area4', image: 'https://picsum.photos/1200/1200/?4', title: '頁面4', blockText: '4' },
  { className: 'area5', image: 'https://picsum.photos/1200/1200/?5', title: '頁面5', blockText: '5' },
  { className: 'area6', image: 'https://picsum.photos/1200/1200/?6', title: '頁面6', blockText: '6' }
];

export default function Home() {
  const areasRef = useRef([]);

  useEffect(() => {
    if (typeof window !== 'undefined') {
      const loadGSAP = async () => {
        const gsapModule = await import('gsap');
        const ScrollTrigger = await import('gsap/ScrollTrigger');

        gsapModule.gsap.registerPlugin(ScrollTrigger.ScrollTrigger);

        areasRef.current.forEach((area, index) => {
          gsapModule.gsap.to(area, {
            scrollTrigger: {
              trigger: area,
              start: "top center",
              end: "bottom center",
              onEnter: () => {
                area.classList.add(styles.active);
                console.log(`滾動到區域 ${index + 1}`);
              },
              onLeave: () => area.classList.remove(styles.active),
              onEnterBack: () => area.classList.add(styles.active),
              onLeaveBack: () => area.classList.remove(styles.active),
            }
          });
        });
      };

      loadGSAP();
    }

    return () => {
      if (typeof window !== 'undefined') {
        const ScrollTrigger = require('gsap/ScrollTrigger').ScrollTrigger;
        ScrollTrigger.getAll().forEach(trigger => trigger.kill());
      }
    };
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {areas.map((area, index) => (
          <div
            key={index}
            className={`${styles.area} ${styles[area.className]}`}
            ref={(el) => (areasRef.current[index] = el)} // 將每個區域的 DOM 元素存入 ref 中
            data-image={area.image}
            data-title={area.title}
          >
            <div className={styles.photo} style={{ backgroundImage: `url(${area.image})` }}></div>
            <div className={styles.block}>
              <div className={styles.text}>{area.title}</div>
            </div>
          </div>
        ))}
      </main>
    </>
  );
}
